import datetime
import aiogram.types
import sesc_json


class StartButtons:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('üßë‚Äçüéì –Ø —É—á–µ–Ω–∏–∫', callback_data='start01'),
        aiogram.types.InlineKeyboardButton('üë©‚Äçüè´ –Ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å', callback_data='start02'),
    ).add(
        aiogram.types.InlineKeyboardButton('üè´ –°–£–ù–¶ –£—Ä–§–£', url='https://lyceum.urfu.ru/'),
    )


class StartButton:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', callback_data='start03'),
    )


class StartButtons1:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('üìñ –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º', callback_data='start04'),
    ).add(
        aiogram.types.InlineKeyboardButton('–ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', callback_data='start06'),
    )


class HelpButton:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('üìñ –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º', callback_data='start04'),
    )


class CallScheduleButton:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('üïí –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤', callback_data='start05'),
    ).add(
        aiogram.types.InlineKeyboardButton('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–æ—Ä–º–µ—Ä', url='https://lyceum.urfu.ru/informer'),
    )


def keyboard_r():
    return aiogram.types.ReplyKeyboardMarkup(resize_keyboard=True).add(
        aiogram.types.KeyboardButton('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'),
    ).add(
        aiogram.types.KeyboardButton('–ù–∞ —Å–µ–≥–æ–¥–Ω—è'),
        aiogram.types.KeyboardButton('–ù–∞ –∑–∞–≤—Ç—Ä–∞'),
        aiogram.types.KeyboardButton('8–ê-–ú–ò'),
    ).add(
        aiogram.types.KeyboardButton('üïí –°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞'),
    ).add(
        aiogram.types.KeyboardButton('üìÑ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã'),
        aiogram.types.KeyboardButton('üìÖ –í—ã–±—Ä–∞—Ç—å –∫–ª–∞—Å—Å'),
    )


def all_command_buttons(t='allco'):
    return aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton(
            'üìÖ –°–µ–≥–æ–¥–Ω—è', callback_data=f'{t}{datetime.datetime.today().weekday() + 1}',
        ),
    ).add(
        aiogram.types.InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data=f'{t}1'),
        aiogram.types.InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥', callback_data=f'{t}4'),
    ).add(
        aiogram.types.InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫', callback_data=f'{t}2'),
        aiogram.types.InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞', callback_data=f'{t}5'),
    ).add(
        aiogram.types.InlineKeyboardButton('–°—Ä–µ–¥–∞', callback_data=f'{t}3'),
        aiogram.types.InlineKeyboardButton('–°—É–±–±–æ—Ç–∞', callback_data=f'{t}6'),
    )


def lessons_buttons(t='allsn'):
    return aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('1 —É—Ä–æ–∫', callback_data=f'{t}0'),
        aiogram.types.InlineKeyboardButton('2 —É—Ä–æ–∫', callback_data=f'{t}1'),
    ).add(
        aiogram.types.InlineKeyboardButton('3 —É—Ä–æ–∫', callback_data=f'{t}2'),
        aiogram.types.InlineKeyboardButton('4 —É—Ä–æ–∫', callback_data=f'{t}3'),
    ).add(
        aiogram.types.InlineKeyboardButton('5 —É—Ä–æ–∫', callback_data=f'{t}4'),
        aiogram.types.InlineKeyboardButton('6 —É—Ä–æ–∫', callback_data=f'{t}5'),
        aiogram.types.InlineKeyboardButton('7 —É—Ä–æ–∫', callback_data=f'{t}6'),
    )


class YesNoButtons:
    keyboard = aiogram.types.InlineKeyboardMarkup().add(
        aiogram.types.InlineKeyboardButton('‚úÖ –î–∞', callback_data='rt_yes01'),
        aiogram.types.InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='rt_yes02'),
    )


def get_forms_keyboard():
    #! FIXME
    json = sesc_json.SESC_JSON['group']
    e, k = 'ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(', 1
    for i in json:
        e += f"KeyboardButton('{i}'),"
        k += 1
    return eval(f'{e})')


def get_teachers_keyboard():
    #! FIXME
    json = sesc_json.SESC_JSON['teacher']
    e, k = 'ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(', 1
    for i in json:
        e += f"KeyboardButton('{i}'),"
        if k % 2 == 0: e += ').add('
        k += 1
    return eval(f'{e})')
